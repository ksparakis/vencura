{
  "name": "dynamic-demo-backend",
  "version": "1.0.0",
  "description": "A demo backend for the dynamic interview challenge ",
  "main": "index.js",
  "scripts": {
    "deploy": "doppler run --command \"npx sls deploy --aws-s3-accelerate\"",
    "deploy:ci": "doppler run --project $CI_PROJECT_NAME -c $CI_ENVIRONMENT_NAME --command \"npx sls deploy --aws-s3-accelerate\"",
    "print": "doppler run -- npx sls print",
    "lint": "eslint src",
    "lint:fix": "eslint src --fix",
    "test": "doppler run -- jest --passWithNoTests",
    "dev": "npx dotenv -e .env -- nodemon --exec npx sls offline start | pino-pretty",
    "dev:doppler": "doppler run -- nodemon --exec npx sls offline start | pino-pretty",
    "migrate:new": "npx typeorm migration:create",
    "migrate:generate": "doppler run -- npx ts-node ./node_modules/typeorm/cli -d ./orm.config.ts migration:create migrations/",
    "migrate:up": "doppler run -- npx ts-node ./node_modules/typeorm/cli -d ./orm.config.ts migration:run",
    "migrate:down": "doppler run -- npx ts-node ./node_modules/typeorm/cli -d ./orm.config.ts migration:revert",
    "test:queue": "doppler run -- npx serverless invoke local --function processTransactionQueue --path ./eventTest.json"
  },
  "scripts-info": {
    "print": "prints out the serverless yaml as it is generated, used for debugging",
    "dev": "Runs sls-offline backend locally, need to have env vars set your self",
    "dev:doppler": "uses the doppler cli to inject env vars, to run the backend locally",
    "migrate:new": "creates a new migration, pass in the migration name",
    "migrate:generate": "looks at the datasource and generates migrations as needed",
    "migrate:up": "Runs any outstanding migrations in the migrations folder",
    "migrate:down": "Undoes the last migration"
  },
  "author": "k@sparakis.com",
  "license": "ISC",
  "devDependencies": {
    "@babel/preset-typescript": "^7.25.7",
    "@eslint/js": "^9.12.0",
    "@types/aws-lambda": "^8.10.145",
    "@types/eslint__js": "^8.42.3",
    "@types/jest": "^29.5.13",
    "@types/pg": "^8.11.10",
    "@types/uuid": "^10.0.0",
    "babel-loader": "^9.2.1",
    "dotenv-cli": "^7.4.2",
    "eslint": "^9.12.0",
    "fork-ts-checker-webpack-plugin": "^9.0.2",
    "jest": "^29.7.0",
    "nodemon": "^3.1.7",
    "pino-pretty": "^11.2.2",
    "serverless": "^3.39.0",
    "serverless-better-credentials": "^2.0.0",
    "serverless-offline": "13.8.1",
    "serverless-offline-local-authorizers-plugin": "^1.2.0",
    "serverless-plugin-typescript": "^2.1.5",
    "serverless-webpack": "^5.14.2",
    "terser-webpack-plugin": "^5.3.10",
    "thread-loader": "^4.0.4",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "typeorm-cli": "^1.0.7",
    "typescript": "^5.6.2",
    "typescript-eslint": "^8.8.1",
    "webpack": "^5.95.0",
    "webpack-node-externals": "^3.0.0"
  },
  "dependencies": {
    "@aws-sdk/client-sqs": "^3.665.0",
    "@middy/core": "^4.7.0",
    "@middy/http-cors": "^4.7.0",
    "@middy/http-error-handler": "^4.7.0",
    "@middy/http-header-normalizer": "^4.7.0",
    "@middy/http-json-body-parser": "^4.7.0",
    "@middy/http-security-headers": "^4.7.0",
    "bip39": "^3.1.0",
    "ethers": "^6.13.2",
    "http-errors": "^2.0.0",
    "jsonwebtoken": "^9.0.2",
    "jwks-rsa": "^3.1.0",
    "moize": "^6.1.6",
    "pg": "^8.13.0",
    "typeorm": "^0.3.20",
    "uuid": "^10.0.0",
    "winston": "^3.14.2",
    "zod": "^3.23.8"
  }
}
